{"dependencies":[{"name":"/Users/samuelbillaud/Documents/Developpement/portfolio092018/package.json","includedInParent":true,"mtime":1536680830515},{"name":"/Users/samuelbillaud/Documents/Developpement/portfolio092018/node_modules/data.js/package.json","includedInParent":true,"mtime":1536680829375},{"name":"stream","loc":{"line":1,"column":25}},{"name":"xlsx","loc":{"line":2,"column":21}},{"name":"csv-parse","loc":{"line":3,"column":22}},{"name":"./csv","loc":{"line":5,"column":34}}],"generated":{"js":"const Readable = require('stream').Readable\nconst XLSX = require('xlsx')\nconst parse = require('csv-parse')\n\nconst {getParseOptions} = require('./csv')\n\nconst xlsxParser = async (file, keyed = false, sheetIdxOrName = 0) => {\n  const buffer = await file.buffer\n  const workbook = XLSX.read(buffer, {type: 'buffer'})\n  let selectedSheetName = sheetIdxOrName\n  if (sheetIdxOrName.constructor.name === 'Number') {\n    selectedSheetName = workbook.SheetNames[sheetIdxOrName]\n  }\n  const sheet = workbook.Sheets[selectedSheetName]\n  const csv = XLSX.utils.sheet_to_csv(sheet)\n  const stream = new Readable()\n  stream.push(csv)\n  stream.push(null)\n  return stream.pipe(parse({\n    columns: keyed ? true : null,\n    ltrim: true\n  }))\n}\n\nmodule.exports = {\n  xlsxParser\n}\n","map":{"mappings":[{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/data.js/lib/parser/xlsx.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/data.js/lib/parser/xlsx.js":"const Readable = require('stream').Readable\nconst XLSX = require('xlsx')\nconst parse = require('csv-parse')\n\nconst {getParseOptions} = require('./csv')\n\nconst xlsxParser = async (file, keyed = false, sheetIdxOrName = 0) => {\n  const buffer = await file.buffer\n  const workbook = XLSX.read(buffer, {type: 'buffer'})\n  let selectedSheetName = sheetIdxOrName\n  if (sheetIdxOrName.constructor.name === 'Number') {\n    selectedSheetName = workbook.SheetNames[sheetIdxOrName]\n  }\n  const sheet = workbook.Sheets[selectedSheetName]\n  const csv = XLSX.utils.sheet_to_csv(sheet)\n  const stream = new Readable()\n  stream.push(csv)\n  stream.push(null)\n  return stream.pipe(parse({\n    columns: keyed ? true : null,\n    ltrim: true\n  }))\n}\n\nmodule.exports = {\n  xlsxParser\n}\n"},"lineCount":28}},"hash":"a11a3373ae5cf134d68b8a963d96269a","cacheData":{"env":{}}}