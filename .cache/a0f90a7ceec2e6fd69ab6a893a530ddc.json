{"dependencies":[{"name":"/Users/samuelbillaud/Documents/Developpement/portfolio092018/package.json","includedInParent":true,"mtime":1536680830515},{"name":"/Users/samuelbillaud/Documents/Developpement/portfolio092018/node_modules/stream-to-async-iterator/package.json","includedInParent":true,"mtime":1536680829374}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @type {Object.<string, Symbol>}\n */\nvar states = exports.states = {\n    notReadable: Symbol('not readable'),\n    readable: Symbol('readable'),\n    ended: Symbol('ended'),\n    errored: Symbol('errored')\n};\n\n/**\n * @typedef {Object} StreamAsyncToIterator~Options\n * @property {number} [size] - the size of each read from the stream for each iteration\n */\n\n\n/**\n * @typedef {Object} StreamAsyncToIterator~Iteration\n * @property {boolean} done\n * @property {*} value\n */\n\n/**\n * Wraps a stream into an object that can be used as an async iterator.\n *\n * This will keep a stream in a paused state, and will only read from the stream on each\n * iteration. A size can be supplied to set an explicit call to `stream.read([size])` in\n * the options for each iteration.\n */\nvar StreamAsyncToIterator = function () {\n    /**\n     * @param {Readable} stream\n     * @param {StreamAsyncToIterator~Options} [options]\n     */\n    function StreamAsyncToIterator(stream) {\n        var _this = this;\n\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, StreamAsyncToIterator);\n\n        /**\n         * The underlying readable stream\n         * @private\n         * @type {Readable}\n         */\n        this._stream = stream;\n\n        /**\n         * Contains stream's error when stream has error'ed out\n         * @private\n         * @type {?Error}\n         */\n        this._error = null;\n\n        /**\n         * The current state of the iterator (not readable, readable, ended, errored)\n         * @private\n         * @type {Symbol}\n         */\n        this._state = states.notReadable;\n\n        /**\n         * @private\n         * @type {?number}\n         */\n        this._size = options.size;\n\n        /**\n         * The rejections of promises to call when stream errors out\n         * @private\n         * @type {Set.<function(err: Error)>}\n         */\n        this._rejections = new Set();\n\n        var handleStreamError = function handleStreamError(err) {\n            _this._error = err;\n            _this._state = states.errored;\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this._rejections[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var reject = _step.value;\n\n                    reject(err);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        };\n\n        var handleStreamEnd = function handleStreamEnd() {\n            _this._state = states.ended;\n        };\n\n        stream.once('error', handleStreamError);\n        stream.once('end', handleStreamEnd);\n    }\n\n    _createClass(StreamAsyncToIterator, [{\n        key: 'next',\n\n\n        /**\n         * Returns the next iteration of data. Rejects if the stream errored out.\n         * @returns {Promise<StreamAsyncToIterator~Iteration>}\n         */\n        value: function () {\n            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {\n                var data;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (!(this._state === states.notReadable)) {\n                                    _context.next = 6;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return Promise.race([this._untilReadable(), this._untilEnd()]);\n\n                            case 3:\n                                return _context.abrupt('return', this.next());\n\n                            case 6:\n                                if (!(this._state === states.ended)) {\n                                    _context.next = 10;\n                                    break;\n                                }\n\n                                return _context.abrupt('return', { done: true, value: null });\n\n                            case 10:\n                                if (!(this._state === states.errored)) {\n                                    _context.next = 14;\n                                    break;\n                                }\n\n                                throw this._error;\n\n                            case 14:\n                                //stream.read returns null if not readable or when stream has ended\n\n                                data = this._size ? this._stream.read(this._size) : this._stream.read();\n\n                                if (!(data !== null)) {\n                                    _context.next = 19;\n                                    break;\n                                }\n\n                                return _context.abrupt('return', { done: false, value: data });\n\n                            case 19:\n                                //we're no longer readable, need to find out what state we're in\n                                this._state = states.notReadable;\n                                return _context.abrupt('return', this.next());\n\n                            case 21:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function next() {\n                return _ref.apply(this, arguments);\n            }\n\n            return next;\n        }()\n\n        /**\n         * Waits until the stream is readable. Rejects if the stream errored out.\n         * @private\n         * @returns {Promise}\n         */\n\n    }, {\n        key: '_untilReadable',\n        value: function _untilReadable() {\n            var _this2 = this;\n\n            return new Promise(function (resolve, reject) {\n                var handleReadable = function handleReadable() {\n                    _this2._state = states.readable;\n                    _this2._rejections.delete(reject);\n                    resolve();\n                };\n\n                _this2._stream.once('readable', handleReadable);\n                _this2._rejections.add(reject);\n            });\n        }\n\n        /**\n         * Waits until the stream is ended. Rejects if the stream errored out.\n         * @private\n         * @returns {Promise}\n         */\n\n    }, {\n        key: '_untilEnd',\n        value: function _untilEnd() {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var handleEnd = function handleEnd() {\n                    _this3._state = states.ended;\n                    _this3._rejections.delete(reject);\n                    resolve();\n                };\n                _this3._stream.once('end', handleEnd);\n                _this3._rejections.add(reject);\n            });\n        }\n    }]);\n\n    return StreamAsyncToIterator;\n}();\n\nexports.default = StreamAsyncToIterator;\n\n\nObject.defineProperty(StreamAsyncToIterator.prototype, Symbol.asyncIterator, {\n    configurable: true,\n    value: function value() {\n        return this;\n    }\n});\n\n//# sourceMappingURL=stream-to-async-iterator.js.map","map":{"mappings":[{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/stream-to-async-iterator/stream-to-async-iterator.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}}],"sources":{"node_modules/stream-to-async-iterator/stream-to-async-iterator.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @type {Object.<string, Symbol>}\n */\nvar states = exports.states = {\n    notReadable: Symbol('not readable'),\n    readable: Symbol('readable'),\n    ended: Symbol('ended'),\n    errored: Symbol('errored')\n};\n\n/**\n * @typedef {Object} StreamAsyncToIterator~Options\n * @property {number} [size] - the size of each read from the stream for each iteration\n */\n\n\n/**\n * @typedef {Object} StreamAsyncToIterator~Iteration\n * @property {boolean} done\n * @property {*} value\n */\n\n/**\n * Wraps a stream into an object that can be used as an async iterator.\n *\n * This will keep a stream in a paused state, and will only read from the stream on each\n * iteration. A size can be supplied to set an explicit call to `stream.read([size])` in\n * the options for each iteration.\n */\nvar StreamAsyncToIterator = function () {\n    /**\n     * @param {Readable} stream\n     * @param {StreamAsyncToIterator~Options} [options]\n     */\n    function StreamAsyncToIterator(stream) {\n        var _this = this;\n\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, StreamAsyncToIterator);\n\n        /**\n         * The underlying readable stream\n         * @private\n         * @type {Readable}\n         */\n        this._stream = stream;\n\n        /**\n         * Contains stream's error when stream has error'ed out\n         * @private\n         * @type {?Error}\n         */\n        this._error = null;\n\n        /**\n         * The current state of the iterator (not readable, readable, ended, errored)\n         * @private\n         * @type {Symbol}\n         */\n        this._state = states.notReadable;\n\n        /**\n         * @private\n         * @type {?number}\n         */\n        this._size = options.size;\n\n        /**\n         * The rejections of promises to call when stream errors out\n         * @private\n         * @type {Set.<function(err: Error)>}\n         */\n        this._rejections = new Set();\n\n        var handleStreamError = function handleStreamError(err) {\n            _this._error = err;\n            _this._state = states.errored;\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this._rejections[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var reject = _step.value;\n\n                    reject(err);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        };\n\n        var handleStreamEnd = function handleStreamEnd() {\n            _this._state = states.ended;\n        };\n\n        stream.once('error', handleStreamError);\n        stream.once('end', handleStreamEnd);\n    }\n\n    _createClass(StreamAsyncToIterator, [{\n        key: 'next',\n\n\n        /**\n         * Returns the next iteration of data. Rejects if the stream errored out.\n         * @returns {Promise<StreamAsyncToIterator~Iteration>}\n         */\n        value: function () {\n            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {\n                var data;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (!(this._state === states.notReadable)) {\n                                    _context.next = 6;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return Promise.race([this._untilReadable(), this._untilEnd()]);\n\n                            case 3:\n                                return _context.abrupt('return', this.next());\n\n                            case 6:\n                                if (!(this._state === states.ended)) {\n                                    _context.next = 10;\n                                    break;\n                                }\n\n                                return _context.abrupt('return', { done: true, value: null });\n\n                            case 10:\n                                if (!(this._state === states.errored)) {\n                                    _context.next = 14;\n                                    break;\n                                }\n\n                                throw this._error;\n\n                            case 14:\n                                //stream.read returns null if not readable or when stream has ended\n\n                                data = this._size ? this._stream.read(this._size) : this._stream.read();\n\n                                if (!(data !== null)) {\n                                    _context.next = 19;\n                                    break;\n                                }\n\n                                return _context.abrupt('return', { done: false, value: data });\n\n                            case 19:\n                                //we're no longer readable, need to find out what state we're in\n                                this._state = states.notReadable;\n                                return _context.abrupt('return', this.next());\n\n                            case 21:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function next() {\n                return _ref.apply(this, arguments);\n            }\n\n            return next;\n        }()\n\n        /**\n         * Waits until the stream is readable. Rejects if the stream errored out.\n         * @private\n         * @returns {Promise}\n         */\n\n    }, {\n        key: '_untilReadable',\n        value: function _untilReadable() {\n            var _this2 = this;\n\n            return new Promise(function (resolve, reject) {\n                var handleReadable = function handleReadable() {\n                    _this2._state = states.readable;\n                    _this2._rejections.delete(reject);\n                    resolve();\n                };\n\n                _this2._stream.once('readable', handleReadable);\n                _this2._rejections.add(reject);\n            });\n        }\n\n        /**\n         * Waits until the stream is ended. Rejects if the stream errored out.\n         * @private\n         * @returns {Promise}\n         */\n\n    }, {\n        key: '_untilEnd',\n        value: function _untilEnd() {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var handleEnd = function handleEnd() {\n                    _this3._state = states.ended;\n                    _this3._rejections.delete(reject);\n                    resolve();\n                };\n                _this3._stream.once('end', handleEnd);\n                _this3._rejections.add(reject);\n            });\n        }\n    }]);\n\n    return StreamAsyncToIterator;\n}();\n\nexports.default = StreamAsyncToIterator;\n\n\nObject.defineProperty(StreamAsyncToIterator.prototype, Symbol.asyncIterator, {\n    configurable: true,\n    value: function value() {\n        return this;\n    }\n});\n\n//# sourceMappingURL=stream-to-async-iterator.js.map"},"lineCount":258}},"hash":"92ef74702064752d279dbf21f2df0674","cacheData":{"env":{}}}