{"dependencies":[{"name":"/Users/samuelbillaud/Documents/Developpement/portfolio092018/package.json","includedInParent":true,"mtime":1536680830515},{"name":"/Users/samuelbillaud/Documents/Developpement/portfolio092018/node_modules/lodash/package.json","includedInParent":true,"mtime":1536680829373},{"name":"./_assignValue","loc":{"line":1,"column":26}},{"name":"./_baseZipObject","loc":{"line":2,"column":28}}],"generated":{"js":"var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n","map":{"mappings":[{"source":"node_modules/lodash/zipObject.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/zipObject.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules/lodash/zipObject.js":"var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n"},"lineCount":25}},"hash":"28cea9b5b7c9678a2c5570b77ac3286e","cacheData":{"env":{}}}